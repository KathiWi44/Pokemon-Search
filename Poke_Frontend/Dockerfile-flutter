# Stage 1: Build the Flutter web app
FROM ubuntu:20.04 AS build

ENV FLUTTER_VERSION="3.22.2"

# Set the working directory in the container
WORKDIR /app

# Install necessary dependencies and clean up apt cache
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl=7.68.0-1ubuntu2.6 \
    cmake=3.16.3-1ubuntu1 \
    git=1:2.25.1-1ubuntu3.10 \
    unzip=6.0-25ubuntu1.1 \
    xz-utils=5.2.4-1ubuntu1 \
    zip=3.0-11build1 \
    && rm -rf /var/lib/apt/lists/*

# Set up non-root user and grant permissions
RUN groupadd -r webapp && useradd -r -g webapp -m -s /bin/bash testuser && \
    mkdir -p /usr/local/lib/flutter && \
    chown -R testuser:webapp /usr/local/lib/flutter

# Install Flutter SDK
USER testuser
WORKDIR /usr/local/lib/flutter
RUN git clone https://github.com/flutter/flutter.git . && \
    git checkout $FLUTTER_VERSION && \
    git config --global --add safe.directory /usr/local/lib/flutter

# Update PATH environment variable
ENV PATH="/usr/local/lib/flutter/bin:${PATH}"

# Run basic Flutter doctor to initialize Flutter SDK
RUN flutter doctor

# Switch to root user to copy the project files
USER root

# Set the working directory in the container
WORKDIR /app

# Copy the Flutter project to the container
COPY . .

# Change ownership of the project files to testuser
RUN chown -R testuser:webapp /app

# Switch back to testuser to install dependencies and build the project
USER testuser

# Install dependencies and build the Flutter web application in a single RUN command
RUN flutter pub get && flutter build web

# Stage 2: Serve the Flutter web app using nginx
FROM nginx:1.19.10

# Copy the build output from the first stage
COPY --from=build /app/build/web /usr/share/nginx/html

# Expose the port that the application runs on
EXPOSE 80

# Run nginx
CMD ["nginx", "-g", "daemon off;"]
